{%- set cluster = salt['pillar.get']('k8s_salt:cluster') %}
{%- set etcd_selector = 'I@k8s_salt:cluster:' + cluster + ' and I@k8s_salt:roles:etcd:True' %}
{%- set etcd_servers = salt['mine.get'](etcd_selector, 'get_k8s_data', 'compound') %}
{%- set api_selector = 'I@k8s_salt:cluster:' + cluster + ' and I@k8s_salt:roles:controlplane:True' %}
{%- set api_servers = salt['mine.get'](api_selector, 'get_k8s_data', 'compound') %}
[Unit]
Description=Kubernetes API Server {{ salt['pillar.get']('controlplane:version') }}
Documentation=https://github.com/kubernetes/kubernetes

[Service]
LimitNOFILE=65535
ExecStart=/usr/local/bin/kube-apiserver \
  --advertise-address={{ k8s_salt['ip'] }} \
  --allow-privileged=true \
  --anonymous-auth=false \
  --apiserver-count={{ api_servers | length }} \
  --audit-log-maxage=30 \
  --audit-log-maxbackup=3 \
  --audit-log-maxsize=100 \
  --audit-log-path=/var/log/k8s/audit.log \
  --authorization-mode=Node,RBAC \
  --bind-address=0.0.0.0 \
  --client-ca-file=/etc/kubernetes/pki/kube-ca.pem \
  --cloud-provider="" \
  --enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,DefaultStorageClass,DefaultTolerationSeconds,MutatingAdmissionWebhook,ValidatingAdmissionWebhook,ResourceQuota,NodeRestriction,Priority,TaintNodesByCondition,PersistentVolumeClaimResize \
  --enable-aggregator-routing=true \
  --etcd-cafile=/etc/kubernetes/pki/etcd-trusted-ca.pem \
  --etcd-certfile=/etc/kubernetes/pki/etcdclient.pem \
  --etcd-keyfile=/etc/kubernetes/pki/etcdclient-key.pem \
  --etcd-prefix=/registry \
  --etcd-servers={% for k, v in etcd_servers.items() %}https://{{v['hostname_fqdn']}}:2379{% if not loop.last %},{% endif %}{% endfor %} \
  --kubelet-certificate-authority=/etc/kubernetes/pki/kube-ca.pem \
  --kubelet-client-certificate=/etc/kubernetes/pki/apiserver.pem \
  --kubelet-client-key=/etc/kubernetes/pki/apiserver-key.pem \
  --kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname \
  --profiling=false \
  --proxy-client-cert-file=/etc/kubernetes/pki/proxy-client.pem \
  --proxy-client-key-file=/etc/kubernetes/pki/proxy-client-key.pem \
  --requestheader-allowed-names=kube-apiserver-proxy-client \
  --requestheader-client-ca-file=/etc/kubernetes/pki/requestheader-ca.pem \
  --requestheader-extra-headers-prefix=X-Remote-Extra- \
  --requestheader-group-headers=X-Remote-Group \
  --requestheader-username-headers=X-Remote-User \
  --runtime-config api/all=true \
  --secure-port={{ k8s_salt['apiserver_port'] }} \
  --service-account-issuer=https://{{ k8s_salt['apiserver_balancer_url'] }}:{{ k8s_salt['apiserver_balancer_port'] }} \
  --service-account-lookup=true \
  --service-account-key-file=/etc/kubernetes/pki/sa.pem \
  --service-account-signing-key-file=/etc/kubernetes/pki/sa-key.pem \
  --service-cluster-ip-range={{ k8s_salt['service_cidr'] }} \
  --service-node-port-range=30000-32767 \
  --storage-backend=etcd3 \
  --tls-cert-file=/etc/kubernetes/pki/apiserver.pem \
  --tls-private-key-file=/etc/kubernetes/pki/apiserver-key.pem \
  --tls-cipher-suites=TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305,TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305
Restart=on-failure
RestartSec=5

[Install]
WantedBy=multi-user.target
